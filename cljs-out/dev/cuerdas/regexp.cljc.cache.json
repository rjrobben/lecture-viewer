["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$regexp?"]],"~:name","~$cuerdas.regexp","~:imports",null,"~:requires",["^ ","~$gstr","~$goog.string","^;","^;"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","^5",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/worrydream/repos/lecture-viewer/target/public/cljs-out/dev/cuerdas/regexp.cljc","~:line",31,"~:column",7,"~:end-line",31,"~:end-column",14,"~:arglists",["~#list",["~$quote",["^G",[["~$x"]]]]],"~:doc","Return `true` if `x` is a regexp pattern\n  instance."],"^6","~$cuerdas.regexp/regexp?","^A","target/public/cljs-out/dev/cuerdas/regexp.cljc","^E",14,"~:method-params",["^G",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^G",[null,null]],"^C",1,"~:variadic?",false,"^B",31,"~:ret-tag","~$boolean","^D",31,"~:max-fixed-arity",1,"~:fn-var",true,"^F",["^G",["^H",["^G",[["~$x"]]]]],"^I","Return `true` if `x` is a regexp pattern\n  instance."],"~$escape",["^ ","^?",null,"^@",["^ ","^A","/Users/worrydream/repos/lecture-viewer/target/public/cljs-out/dev/cuerdas/regexp.cljc","^B",38,"^C",7,"^D",38,"^E",13,"^F",["^G",["^H",["^G",[["~$s"]]]]],"^I","Escapes characters in the string that are not safe\n   to use in a RegExp."],"^6","~$cuerdas.regexp/escape","^A","target/public/cljs-out/dev/cuerdas/regexp.cljc","^E",13,"^K",["^G",[["~$s"]]],"^L",null,"^M",["^G",[null,null]],"^C",1,"^N",false,"^B",38,"^O","~$string","^D",38,"^Q",1,"^R",true,"^F",["^G",["^H",["^G",[["~$s"]]]]],"^I","Escapes characters in the string that are not safe\n   to use in a RegExp."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^I","A regexp helpers and enhancements (mostly for cljs).","~:as-aliases",["^ "]]